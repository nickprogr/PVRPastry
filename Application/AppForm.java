/*
 * AppForm.java
 *
 * Created on Feb 14, 2012, 5:24:06 PM
 */

package Application;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class AppForm extends javax.swing.JFrame {

    /** Creates new form AppForm */
    public AppForm() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pastryLogLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pastryLog = new javax.swing.JTextArea();
        appLogLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        appLog = new javax.swing.JTextArea();
        pastryButton = new javax.swing.JButton();
        ftpButton = new javax.swing.JButton();
        uploadButton = new javax.swing.JButton();
        downloadButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pastryLogLabel.setText("Node Activity");

        pastryLog.setColumns(20);
        pastryLog.setRows(5);
        jScrollPane1.setViewportView(pastryLog);

        appLogLabel.setText("FTP Activity");

        appLog.setColumns(20);
        appLog.setRows(5);
        jScrollPane2.setViewportView(appLog);

        pastryButton.setFont(new java.awt.Font("Ubuntu", 1, 15));
        pastryButton.setText("JOIN RING");
        pastryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pastryButtonActionPerformed(evt);
            }
        });

        ftpButton.setFont(new java.awt.Font("Ubuntu", 1, 15));
        ftpButton.setText("START SERVER");
        ftpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftpButtonActionPerformed(evt);
            }
        });

        uploadButton.setFont(new java.awt.Font("Ubuntu", 1, 15));
        uploadButton.setText("UPLOAD FILE");
        uploadButton.setEnabled(false);
        uploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadButtonActionPerformed(evt);
            }
        });

        downloadButton.setFont(new java.awt.Font("Ubuntu", 1, 15));
        downloadButton.setText("DOWNLOAD FILE");
        downloadButton.setEnabled(false);
        downloadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pastryLogLabel)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(downloadButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(uploadButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ftpButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pastryButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(appLogLabel)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pastryLogLabel)
                    .addComponent(appLogLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pastryButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ftpButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(uploadButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(downloadButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pastryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pastryButtonActionPerformed
        if(pastryButton.getText().compareTo("LEAVE RING")!=0){
            pastryButton.setEnabled(false);
            pastryButton.setText("LEAVE RING");
        
            RingJoiner worker = new RingJoiner(pastryLog,pastryButton,downloadButton);
            worker.execute();
        } else {
            pastryButton.setEnabled(false);
        
            RingLeaver worker = new RingLeaver(pastryLog,pastryButton,downloadButton,ftpButton,uploadButton);
            worker.execute();
        }
    }//GEN-LAST:event_pastryButtonActionPerformed

    private void ftpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftpButtonActionPerformed

        if(ftpButton.getText().compareTo("STOP SERVER")!=0){
            String servDir = JOptionPane.showInputDialog(null, "Enter File Directory : ", null, 1);

            ftpButton.setEnabled(false);
            ftpButton.setText("STOP SERVER");
            FileTransferServer worker = new FileTransferServer("FileDirs/"+servDir,appLog,ftpButton,uploadButton, state);
            worker.execute();
        } else {
            state.ftpServ.stop();
            ftpButton.setText("START SERVER");
            uploadButton.setEnabled(false);
            appLog.append("====    Stopping Server!");
        }
    }//GEN-LAST:event_ftpButtonActionPerformed

    private void uploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadButtonActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showDialog(this, "Upload");
        String path = chooser.getSelectedFile().getAbsolutePath();
        String filename = path;
        FileTransferClientUpload ftc = new FileTransferClientUpload(state.servPort,filename, appLog);
        ftc.execute();
    }//GEN-LAST:event_uploadButtonActionPerformed

    private void downloadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadButtonActionPerformed
        // TODO add your handling code here:
        String filename = JOptionPane.showInputDialog(null, "Enter exact file Name : ", null, 1);
        FileTransferClientDownload ftc = new FileTransferClientDownload(filename, appLog);
        ftc.execute();
    }//GEN-LAST:event_downloadButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea appLog;
    private javax.swing.JLabel appLogLabel;
    private javax.swing.JButton downloadButton;
    private javax.swing.JButton ftpButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton pastryButton;
    private javax.swing.JTextArea pastryLog;
    private javax.swing.JLabel pastryLogLabel;
    private javax.swing.JButton uploadButton;
    // End of variables declaration//GEN-END:variables

    public static AppState state = new AppState();
}
